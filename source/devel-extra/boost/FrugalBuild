# Compiling Time: 2.33 SBU
# Maintainer: Marius Cirsta <mcirsta@frugalware.org>
# Contributor: Elentir <elentir@frugalware.org>
# Contributor: Christian Hamar alias krix <krics@linuxforum.hu>

options+=('asneeded')

pkgname=boost
pkgver=1.58.0
pkgrel=4
pkgdesc="Boost header files, examples and tools"
_F_sourceforge_ext=".tar.bz2"
Finclude sourceforge python
url="http://boost.org/"
depends=()
up2date="lynx -dump http://www.boost.org/users/download/|grep 'Current Release'|tail -n 1 | sed 's/.*]\(.*\) -.*/\1/'"
makedepends=('python>=2.7' 'icu4c>=55.1' 'bzip2' 'zlib' 'openssl>=1.0.0')
groups=('devel-extra')
archs=('i686' 'x86_64' 'arm')
source=(${source/-$pkgver/_${pkgver//./_}}
        boost-fix-64-bit-build-due-to-ambiguous-format-call.patch missing_includes.patch)
_F_cd_path="${pkgname}_`echo $pkgver|tr . _`"
sha1sums=('2fc96c1651ac6fe9859b678b165bd78dc211e881' \
          '9cb9625c5c1c87505d5a75d16aaf2cc188e9a40c' \
          '638f39e4516d1395f87dc5826229809848d8a360')

subpkgs=("libboost" "libboost-static")
subdescs=('Boost libraries.' 'Boost libraries statically linked.')
subdepends=('icu4c>=55.1 libgcc bzip2 zlib' '')
subrodepends=('' '')
subgroups=('lib' 'devel-extra')
subarchs=('i686 x86_64 arm' 'i686 x86_64 arm')

if [ "$CARCH" != "arm" ]; then
	subpkgs=("${subpkgs[@]}" "libboost-mpi")
	subdescs=("${subdescs[@]}" 'Boost MPI Interface.')
	subdepends=("${subdepends[@]}" 'openmpi>=1.8.3-2')
	subrodepends=("${subrodepends[@]}" 'libboost')
	subgroups=("${subgroups[@]}" 'lib-extra')
	subarchs=("${subarchs[@]}" "i686 x86_64")
fi

build()
{
	#if [ "$CARCH" == "x86_64" ]; then ## maybe PPC ?
	#	export CXXFLAGS="$CXXFLAGS -fPIC -DPIC"
	#fi
	Fpatchall
	local JOBS="$(sed -e 's/.*\(-j *[0-9]\+\).*/\1/' <<< ${MAKEFLAGS})"
	Fcd
	./bootstrap.sh --with-toolset=gcc --with-icu
	[ "$CARCH" == "arm" ] && MPI="--without-mpi"
	# Support for OpenMPI
	echo "using mpi ;" >> project-config.jam
	./b2 	variant=release \
		debug-symbols=off \
		threading=multi \
		runtime-link=shared \
		link=shared,static \
		toolset=gcc \
		optimization=speed \
		${JOBS} ${MPI} \
		-sHAVE_ICU=1 -sICU_PATH=/usr \
	    	-sBOOST_ROOT="$Fsrcdir" \
	    	-sPYTHON_ROOT=/usr \
	    	-sPYTHON_VERSION="$_F_python_ver" \
		-sEXPAT_INCLUDE=/usr/include \
		-sEXPAT_LIBPATH=/usr/lib \
		--prefix="$Fdestdir/usr" \
		--exec-prefix="$Fdestdir/usr" \
		--includedir="$Fdestdir/usr/include" \
		--libdir="$Fdestdir/usr/lib" \
		--layout=system install || Fdie

	#for k3d
	cp libs/math/include_private/boost//math/tools/* $Fdestdir/usr/include/boost/math/tools/ || Fdie
		
	[ "$CARCH" != "arm" ] && Fsplit libboost-mpi usr/lib/libboost_graph_parallel*
	[ "$CARCH" != "arm" ] && Fsplit libboost-mpi usr/lib/libboost_mpi*
	[ "$CARCH" != "arm" ] && Fsplit libboost-mpi usr/lib/mpi.so
	Fsplit libboost        usr/lib/libboost_*.so*
	Fsplit libboost-static usr/lib/libboost_*.a
}

# optimization OK
